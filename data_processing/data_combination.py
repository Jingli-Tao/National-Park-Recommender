import pandas as pd
import numpy as np
import json
import re

parks = ['Acadia', 'American Samoa', 'Arches', 'Badlands', 'Big Bend', 'Biscayne', 
        'Black Canyon', 'Bryce Canyon', 'Canyonlands', 'Capitol Reef',
        'Carlsbad Caverns', 'Channel Islands', 'Congaree', 'Crater Lake', 'Cuyahoga Valley',
        'Death Valley', 'Denali', 'Dry Tortugas', 'Everglades', 'Gates',
        'Gateway Arch', 'Glacier', 'Glacier Bay', 'Grand Canyon', 'Grand Teton', 'Great Basin',
        'Great Sand Dunes', 'Great Smoky Mountains', 'Guadalupe Mountains', 'Haleakal', 
        "Hawai", 'Hot Springs', 'Indiana Dunes', 'Isle Royale', 'Joshua Tree',
        'Katmai', 'Kenai Fjords', 'Kings Canyon', 'Kobuk Valley', 'Lake Clark', 'Lassen Volcanic',
        'Mammoth Cave', 'Mesa Verde', 'Mount Rainier', 'North Cascades', 'Olympic', 
        'Petrified Forest', 'Pinnacles', 'Rocky Mountain', 'Saguaro', 'Sequoia',
        'Shenandoah', 'Theodore Roosevelt', 'Virgin Islands', 'Voyageurs', 'Wind Cave', 
        'Wrangell', 'Yellowstone', 'Yosemite', 'Zion']

def firstCombination():
    df_visitation = pd.read_csv('visitation_extraction_2008_2018.csv')
    df_activity = pd.read_csv('activity.csv') # generated by data_collection.py

    columns = df_visitation.columns.to_list()
    columns.append('Activity')
    df = pd.DataFrame(columns=columns)

    for park in parks:
        park_data = df_visitation.loc[df_visitation.Park.str.contains(park)]
        activities = df_activity.loc[df_activity.Park.str.contains(park)].Activity.to_list()

        for activity in activities:
            temp = park_data.assign(Activity=pd.Series(activity).repeat(len(park_data.index)).to_numpy())
            df = df.append(temp)

    return df

def secondCombination(df_first):
    df_coordinate = pd.read_csv('coordinate.csv') # generated by data_collection.py

    columns = df_first.columns.to_list()
    columns.append('Coordinate')
    df = pd.DataFrame(columns=columns)

    for park in parks:
        coordinate = df_coordinate.loc[df_coordinate.Park.str.contains(park)].Coordinate
        park_data = df_first.loc[df_first.Park.str.contains(park)]
        
        if coordinate.empty:
            if park == 'Redwood':
                new_column = pd.Series(data='TBD').repeat(1584)
        
        if park == 'Glacier':
            new_column = coordinate.repeat(len(park_data.index)/2)

        else:
            new_column = coordinate.repeat(len(park_data.index))

        temp = park_data.assign(Coordinate=new_column.to_numpy())
        df = df.append(temp)
    
    return df 

# Combine visitation, activity
df_first = firstCombination()

# Combine firt combination, coordinate
df_second = secondCombination(df_first)

# Remove repeated rows
df_second = df_second.drop_duplicates()

# Save results as csv
with open("combined_data.csv", 'w', newline='') as fp:
        df_second.to_csv(fp, index=False)